apply plugin: 'spoon'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    defaultConfig {
        applicationId "com.phicdy.mycuration"
        multiDexEnabled true

        testApplicationId "com.phicdy.mycuration.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias "$RELEASE_KEY_ALIAS"
            storeFile file("$RELEASE_STORE_FILE_PATH")
            keyPassword "$RELEASE_KEY_PASSWORD"
            storePassword "$RELEASE_STORE_PASSWORD"
        }
    }

    buildTypes {
        debug {
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        disable 'MissingTranslation'
        disable "RtlHardcoded"
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

spoon {
    debug = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

dependencies {
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'org.assertj:assertj-core:3.22.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

    implementation project(':core')
    implementation project(':di_common')
    implementation project(':domain')
    implementation project(':entity')
    implementation project(':feature_add_curation')
    implementation project(':feature_article_list')
    implementation project(':feature_curated_article_list')
    implementation project(':feature_license')
    implementation project(':feature_rss_list')
    implementation project(':legacy')
    implementation project(':repository')
    implementation project(':resource')
    implementation project(':util')
    implementation project(':tracker')
    implementation project(':advertisement')
    implementation project(':admob')
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.preference:preference:$preference_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation 'com.facebook.stetho:stetho:1.6.0'

    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.4.1'

    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "com.squareup.sqldelight:android-driver:$sql_delight_version"
    implementation "androidx.sqlite:sqlite-ktx:$sqlite_version"
}

apply plugin: 'com.google.gms.google-services'

afterEvaluate { project ->
    project.tasks.assembleDebug {
        println "$COPY_BUILD_DESTINATION"
        project.copy {
            from 'build/outputs/apk/debug'
            into "$COPY_BUILD_DESTINATION"
            include '**/*.apk'
        }
    }
}
