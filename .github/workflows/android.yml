name: Android CI

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
    branches:
      - develop

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICE: ${{ secrets.GOOGLE_SERVICE}}
        run: echo $GOOGLE_SERVICE | base64 --decode > ./app/google-services.json
      - name: Unit Test
        env:
          TZ: Asia/Tokyo
        run: ./gradlew testDebugUnitTest
      - name: Create jacoco report
        run: ./gradlew jacocoTestReport
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICE: ${{ secrets.GOOGLE_SERVICE}}
        run: echo $GOOGLE_SERVICE | base64 --decode > ./app/google-services.json
      - name: Lint
        run: ./gradlew lintDebug